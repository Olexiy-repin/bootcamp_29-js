'use strict';
/* ========= –ú–∞—Å—Å–∏–≤—ã: –ª–∏—Ç–µ—Ä–∞–ª –º–∞—Å—Å–∏–≤–∞, —ç–ª–µ–º–µ–Ω—Ç—ã, –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è, –¥–ª–∏–Ω–∞ ========= */
// –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
// –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
// –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggy¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.

// const genres = ['Jazz', 'Blues'];
// console.log(genres);

// genres.push('–†–æ–∫-–Ω-—Ä–æ–ª–ª');
// console.log(genres);

// console.log(genres[0]);

// console.log(genres[genres.length - 1]);

// const firstElem = genres.shift();
// console.log(genres);
// console.log(firstElem);

// genres.unshift('Country', 'Reggy');
// console.log(genres);

/* ========= –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é ========= */
// –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é a = 10.
// –°–æ–∑–¥–∞–π—Ç–µ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π b -> –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é a
// –í—ã–≤–∏–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –æ–±–µ —ç—Ç–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
// –ò–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π a –∏ –µ—â—ë —Ä–∞–∑ –≤—ã–≤–µ–¥–µ—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å
// let a = 10;
// const b = a;

// console.log(`a: ${a}`); //10
// console.log(`b: ${b}`); //10

// a = 20;

// console.log(`a: ${a}`); //20
// console.log(`b: ${b}`); //10

// –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ arr1 = [1, 2, 3].
// –°–æ–∑–¥–∞–π—Ç–µ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –º–∞—Å—Å–∏–≤—É arr2 -> –º–∞—Å—Å–∏–≤ arr1
// –í—ã–≤–∏–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –æ–±–∞ —ç—Ç–∏ –º–∞—Å—Å–∏–≤–∞
// –î–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤ arr1 –∏ –µ—â—ë —Ä–∞–∑ –≤—ã–≤–µ–¥–µ—Ç–µ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
// const arr1 = [1, 2, 3];
// const arr2 = arr1;

// console.log(`arr1: ${arr1}`); // [1, 2, 3]
// console.log(`arr2: ${arr2}`); // [1, 2, 3]

// arr1.push(4);

// console.log(`arr1: ${arr1}`); // [1, 2, 3, 4]
// console.log(`arr2: ${arr2}`); // [1, 2, 3,4]

// arr2.push(5);

// console.log(`arr1: ${arr1}`); // [1, 2, 3, 4]
// console.log(`arr2: ${arr2}`); // [1, 2, 3,4]

/* ========= –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞ —Ü–∏–∫–ª–∞–º–∏ for –∏ for...of ========= */
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ fruits —Ü–∏–∫–ª–æ–º for.
// –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞.
// –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.
// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// for (let i = 0; i < fruits.length; i += 1) {
//   console.log(`${i + 1}: ${fruits[i]}`);
// }

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ.
// –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª.
// –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.
// const numbers = [2, 17, 94, 1, 23, 37];
// let min = numbers[0];

// 1 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
// for (let i = 0; i < numbers.length; i += 1) {
//   const elem = numbers[i];
//   if (elem < min) {
//     min = elem;
//   }
// }

// 2 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
// for (const elem of numbers) {
//   if (elem < min) {
//     min = elem;
//   }
// }

// console.log(min);

// –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ —Å –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –Ω—É–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –æ–±—â—É—é —Å—É–º–º—É –∑–∞—Ä–ø–ª–∞—Ç
// const salaries = [200, 450, 600, 150, 300];
// let summ = 0;

// 1 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
// for (let i = 0; i < salaries.length; i += 1) {
//   summ += salaries[i];
// }

// console.log(summ);

// 2 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
// for (const elem of salaries) {
//   summ += elem;
// }

// console.log(summ);

// –£ –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—Å—Å–∏–≤–æ–≤ —Å –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –æ—Ç–¥–µ–ª–æ–≤, –Ω—É–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –æ–±—â—É—é —Å—É–º–º—É –∑–∞—Ä–ø–ª–∞—Ç
// 1 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
// const managerSalaries = [100, 150, 250, 400, 500];
// const developersSalaries = [800, 1500, 4000];
// let summ = 0;

// for (const elem of managerSalaries) {
//   summ += elem;
// }

// for (const elem of developersSalaries) {
//   summ += elem;
// }

// console.log(summ);

// 2 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
// const managerSalaries = [100, 150, 250, 400, 500];
// const developersSalaries = [800, 1500, 4000];
// const totalSalaries = [];
// let summ = 0;

// for (const elem of managerSalaries) {
//   totalSalaries.push(elem);
// }

// for (const elem of developersSalaries) {
//   totalSalaries.push(elem);
// }

// for (const elem of totalSalaries) {
//   summ += elem;
// }

// console.log(summ);

// 3 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
// const managerSalaries = [100, 150, 250, 400, 500];
// const developersSalaries = [800, 1500, 4000];
// const totalSalaries = managerSalaries.concat(developersSalaries);
// let summ = 0;

// for (const elem of totalSalaries) {
//   summ += elem;
// }

// console.log(summ);

/* ========= –ë–∞–∑–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã: split –∏ join, indexOf –∏ includes, push, slice –∏ splice, concat ========= */

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
// –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
// –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.
// const values = '8 11';
// const arr = values.split(' ');

// const sideA = arr[0];
// const sideB = arr[1];

// const area = sideA * sideB;
// console.log(area);

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö names –∏ phones —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏.
// –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ.
// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.
// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';
// const namesArr = names.split(',');
// const phonesArr = phones.split(',');

// for (let i = 0; i < namesArr.length; i += 1) {
//   console.log(`${namesArr[i]}: ${phonesArr[i]}`);
// }

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤)
// –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å.
// 1 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
// const string = 'Welcome to the future';
// const symbolArr = string.split('');
// const reverseArr = [];

// for (let i = symbolArr.length - 1; i >= 0; i -= 1) {
//   reverseArr.push(symbolArr[i]);
// }

// const reverseStr = reverseArr.join('');

// console.log(string);
// console.log(reverseStr);

// 2 –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
// const string = 'Welcome to the future';
// let reverStr = '';

// for (let i = string.length - 1; i >= 0; i -= 1) {
//   reverStr += string[i];
// }

// console.log(reverStr);

// –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ, —á—Ç–æ –±—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–∏—Å—å
// const employees = ['Dennis', 'Shaw', 'Watkins', 'Ray', 'Shaw', 'Watkins'];
// const filteredEmployees = [];

// for (let i = 0; i < employees.length; i += 1) {
//   if (employees.indexOf(employees[i]) === i) {
//     filteredEmployees.push(employees[i]);
//   }
// }
// console.log(filteredEmployees);
// // –°–æ—Ç—Ä—É–¥–Ω–∏–∫ Shaw —É–≤–æ–ª–∏–ª—Å—è, —É–¥–∞–ª–∏—Ç–µ –µ–≥–æ –∏–∑ –º–∞—Å—Å–∏–≤–∞
// const shawIdx = filteredEmployees.indexOf('Shaw');
// filteredEmployees.splice(shawIdx, 1);
// console.log(filteredEmployees);

// // –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Thornton, –ø–µ—Ä–µ–¥ Watkins;
// const watkinsIdx = filteredEmployees.indexOf('Watkins');
// filteredEmployees.splice(watkinsIdx, 0, 'Thornton');
// console.log(filteredEmployees);
