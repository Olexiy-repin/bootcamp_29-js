'use strict';
/* ======== –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã, –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –≤–æ–∑–≤—Ä–∞—Ç ======== */
// function –∏–º—è_—Ñ—É–Ω–∫—Ü–∏–∏(–ø—Ä–∞–º–µ—Ç—Ä_1, –ø–∞—Ä–∞–º–µ—Ç—Ä_2...) {
//   // —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
// }
// const numbers = [1, 2, 3, 4, 5];
// const namesArr = ['Oleksii', 'Alexander', 'Vasyl'];

// function deleteLastElem(arr) {
//   const lastElement = arr[arr.length - 1];
//   arr.length -= 1;

//   return lastElement;
// }

// console.log(numbers);
// console.log(deleteLastElem(numbers));
// console.log(deleteLastElem(numbers));
// console.log(deleteLastElem(numbers));
// console.log(numbers);

// function summ(a, b) {
//   const result = a + b;

//   if (result > 10) {
//     return `result: ${result}`;
//   }

//   return 'result –º–µ–Ω—å—à–µ 10';
// }

// console.log(summ(10, 2));
// console.log(summ(12, 2));
// console.log(summ(20, 2));

// const summ = function (a, b) {
//   const result = a + b;

//   if (result > 10) {
//     return `result: ${result}`;
//   }

//   return 'result –º–µ–Ω—å—à–µ 10';
// };

// console.log(summ(10, 2));
// console.log(summ(12, 2));
// console.log(summ(20, 2));

// TASK 01
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é calcBMI(weight, height) –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ —á–µ–ª–æ–≤–µ–∫–∞.
// –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –≤–µ—Å –≤ –∫–∏–ª–ª–æ–≥—Ä–∞–º–º–∞—Ö –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç –≤—ã—Å–æ—Ç—ã —á–µ–ª–æ–≤–µ–∫–∞ –≤ –º–µ—Ç—Ä–∞—Ö.
// –í–µ—Å –∏ –≤—ã—Å–æ—Ç–∞ –±—É–¥—É—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏. –ù–µ—Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ –≤–∏–¥–µ 24.7 –∏–ª–∏ 24,7,
// —Ç–æ –µ—Å—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—è—Ç–∞—è.
// –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∫—Ä—É–≥–ª–∏—Ç—å –¥–æ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π;
// const calcBMI = function (weight, height) {
//   weight = Number.parseFloat(weight.replace(',', '.'));
//   height = Number.parseFloat(height.replace(',', '.'));

//   const bmi = weight / height ** 2;

//   return bmi.toFixed(1);
// };

// const bmi = calcBMI('88,3', '1.75');
// console.log(bmi); // 28.8

// TASK 02
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é min(a,b), –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª a –∏ b.
// const min = function (a, b) {
//   return a > b ? b : a;
// };

// console.log(min(2, 5)); // 2
// console.log(min(3, -1)); // -1
// console.log(min(1, 1)); // 1

// TASK 03
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getRectArea(dimensions) –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
// –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä dimensions –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
// –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// const getRectArea = function (dimensions) {
//   const valuesArr = dimensions.split(' ');

//   return valuesArr[0] * valuesArr[1];
// };

// console.log(getRectArea('8 11'));

// TASK 04
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é logItems(items), –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–∏–∫–ª for,
// –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ
// –≤ —Ñ–æ—Ä–º–∞—Ç–µ <–Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.
// –ù–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ ['Mango', 'Poly', 'Ajax'] —Å –∏–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ 1 - Mango,
// –∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 2 –≤—ã–≤–µ–¥–µ—Ç 3 - Ajax.

// const logItems = function (items) {
//   for (let i = 0; i < items.length; i += 1) {
//     console.log(`${i + 1} - ${items[i]}`);
//   }
// };

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

// TASK 05
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é printContactsInfo(names, phones) –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// –í –ø–∞—Ä–∞–º–µ—Ç—Ä—ã names –∏ phones –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏.
// –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ.
// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// const printContactsInfo = function (names, phones) {
//   names = names.split(',');
//   phones = phones.split(',');

//   for (let i = 0; i < names.length; i += 1) {
//     console.log(`${names[i]}: ${phones[i]}`);
//   }
// };

// printContactsInfo(
//   'Jacob,William,Solomon,Artemis',
//   '89001234567,89001112233,890055566377,890055566300'
// );

// TASK 06
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é findLargestNumber(numbers)–∫–æ—Ç–æ—Ä–∞—è –∏—â–µ—Ç —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ.
// const findLargestNumber = function (numbers) {
//   let max = numbers[0];

//   for (const number of numbers) {
//     if (number > max) {
//       max = number;
//     }
//   }

//   return max;
// };

// console.log(findLargestNumber([2, 17, 94, 1, 23, 37])); // 94
// console.log(findLargestNumber([49, 4, 7, 83, 12])); // 83

// TASK 07
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é calAverage() –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
// –í—Å–µ –∞—Ä—É–≥–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞–º–∏.
// const calAverage = function (...args) {
//   // const newArr = Array.from(arguments);
//   let total = 0;
//   for (const number of args) {
//     total += number;
//   }

//   return total / args.length;
// };

// console.log(calAverage(1, 2, 3, 4)); // 2.5
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2

// TASK 08
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –æ–±—É—á–∞—é—â–∏—Ö –∫—É—Ä—Å–æ–≤ courses:
// addCourse(name) - –¥–æ–±–∞–≤–ª—è–µ—Ç –∫—É—Ä—Å –≤ –∫–æ–Ω–µ—Ü –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// removeCourse(name) - —É–¥–∞–ª—è–µ—Ç –∫—É—Ä—Å –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// updateCourse(oldName, newName) - –∏–∑–º–µ–Ω—è–µ—Ç –∏–º—è –Ω–∞ –Ω–æ–≤–æ–µ
// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

// const addCourse = function (name) {
//   if (!courses.includes(name)) {
//     courses.push(name);
//     return;
//   }

//   console.log('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫—É—Ä—Å');
// };

// const removeCourse = function (name) {
//   if (courses.includes(name)) {
//     const idxOfCourse = courses.indexOf(name);
//     courses.splice(idxOfCourse, 1);
//     return;
//   }

//   console.log('–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω');
// };

// const updateCourse = function (oldName, newName) {
//   if (courses.includes(oldName)) {
//     const idxOfCourse = courses.indexOf(oldName);
//     courses.splice(idxOfCourse, 1, newName);
//     return;
//   }

//   console.log('–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω');
// };

// addCourse('Express');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// addCourse('CSS'); // '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫—É—Ä—Å'

// removeCourse('React');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// removeCourse('Vue'); // '–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω'

// updateCourse('Express', 'NestJS');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']
// updateCourse('–°++', 'NestJS');
